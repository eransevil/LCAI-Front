{"ast":null,"code":"// client/src/redux/authSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n    },\n    signupSuccess: (state, action) => {\n      state.user = action.payload;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logout,\n  signupSuccess\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","isAuthenticated","authSlice","name","reducers","loginSuccess","state","action","payload","logout","signupSuccess","actions","reducer"],"sources":["/Users/eransevil/Desktop/side projects/lcai/client/src/redux/authSlice.js"],"sourcesContent":["// client/src/redux/authSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n    signupSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { loginSuccess, logout, signupSuccess } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,MAAM,EAAGH,KAAK,IAAK;MACjBA,KAAK,CAACN,IAAI,GAAG,IAAI;IACnB,CAAC;IACDU,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,YAAY;EAAEI,MAAM;EAAEC;AAAc,CAAC,GAAGR,SAAS,CAACS,OAAO;AAExE,eAAeT,SAAS,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}